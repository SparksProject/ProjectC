// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectC.Data.Models;

namespace ProjectC.Data.Migrations
{
    [DbContext(typeof(ProjectCContext))]
    partial class SparksXContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectC.Data.Models.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ProjectId");

                    b.Property<byte>("RecordStatusId");

                    b.HasKey("CompanyId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RecordStatusId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("ProjectC.Data.Models.Customer", b =>
                {
                    b.Property<Guid>("CustomerId");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("OtherId")
                        .HasMaxLength(20);

                    b.Property<string>("PasswordWs")
                        .HasMaxLength(20);

                    b.Property<byte>("RecordStatusId");

                    b.Property<string>("UserNameWs")
                        .HasMaxLength(20);

                    b.HasKey("CustomerId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RecordStatusId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ProjectC.Data.Models.Invoice", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AgentName")
                        .HasMaxLength(250);

                    b.Property<string>("AwbNo")
                        .HasMaxLength(30);

                    b.Property<string>("Blno")
                        .HasColumnName("BLNo")
                        .HasMaxLength(25);

                    b.Property<string>("ConsgnAddress")
                        .HasMaxLength(2000);

                    b.Property<string>("ConsgnCity")
                        .HasMaxLength(60);

                    b.Property<string>("ConsgnCountry")
                        .HasMaxLength(25);

                    b.Property<string>("ConsgnName")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DeliveryLocation")
                        .HasMaxLength(250);

                    b.Property<decimal?>("FreightAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("FreightCurrency")
                        .HasMaxLength(6);

                    b.Property<string>("Incoterms")
                        .HasMaxLength(25);

                    b.Property<decimal?>("InsuranceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("InsuranceCurrency")
                        .HasMaxLength(6);

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("InvoiceCurrency")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("PlateNo")
                        .HasMaxLength(50);

                    b.Property<string>("SenderAddress")
                        .HasMaxLength(2000);

                    b.Property<string>("SenderCity")
                        .HasMaxLength(60);

                    b.Property<string>("SenderCountry")
                        .HasMaxLength(25);

                    b.Property<string>("SenderName")
                        .HasMaxLength(250);

                    b.Property<string>("SenderNo")
                        .HasMaxLength(30);

                    b.Property<string>("TransptrName")
                        .HasMaxLength(25);

                    b.Property<string>("VesselName")
                        .HasMaxLength(250);

                    b.Property<Guid>("WorkOrderMasterId");

                    b.HasKey("InvoiceId");

                    b.HasIndex("WorkOrderMasterId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ProjectC.Data.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<double>("ActualQuantity");

                    b.Property<string>("CommclDesc")
                        .HasMaxLength(240);

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(50);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DescGoods")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<double?>("GrossWeight");

                    b.Property<string>("HsCode")
                        .HasMaxLength(16);

                    b.Property<string>("IntrnlAgmt")
                        .HasMaxLength(10);

                    b.Property<double>("InvoiceAmount");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<Guid>("InvoiceId");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double>("InvoiceQuantity");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<double>("NetWeight");

                    b.Property<int>("NumberOfPackages");

                    b.Property<string>("PkgType")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("ProductNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("RecordStatusId");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.HasKey("InvoiceDetailId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("ProjectC.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CustomerId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("GrossWeight");

                    b.Property<string>("HsCode")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("NetWeight");

                    b.Property<string>("ProductNameEng")
                        .HasMaxLength(100);

                    b.Property<string>("ProductNameOrg")
                        .HasMaxLength(100);

                    b.Property<string>("ProductNameTr")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ProductNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("RecordStatusId");

                    b.Property<string>("Uom")
                        .HasMaxLength(3);

                    b.HasKey("ProductId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RecordStatusId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProjectC.Data.Models.RecordStatus", b =>
                {
                    b.Property<byte>("RecordStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecordStatusName")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("RecordStatusId");

                    b.ToTable("RecordStatus");
                });

            modelBuilder.Entity("ProjectC.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<byte>("RecordStatusId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("UserId")
                        .HasName("PK_Users_1");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RecordStatusId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProjectC.Data.Models.WorkOrderMaster", b =>
                {
                    b.Property<Guid>("WorkOrderMasterId");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("DeclarationType")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("MasterId");

                    b.Property<string>("Message")
                        .HasColumnType("ntext");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte>("RecordStatusId");

                    b.Property<int>("Status");

                    b.Property<string>("WorkOrderNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("WorkOrderMasterId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RecordStatusId");

                    b.ToTable("WorkOrderMaster");
                });

            modelBuilder.Entity("ProjectC.Data.Models.Company", b =>
                {
                    b.HasOne("ProjectC.Data.Models.User", "CreatedByNavigation")
                        .WithMany("CompanyCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Company_Users");

                    b.HasOne("ProjectC.Data.Models.User", "DeletedByNavigation")
                        .WithMany("CompanyDeletedByNavigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("FK_Company_Users2");

                    b.HasOne("ProjectC.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("CompanyModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Company_Users1");

                    b.HasOne("ProjectC.Data.Models.RecordStatus", "RecordStatus")
                        .WithMany("Company")
                        .HasForeignKey("RecordStatusId")
                        .HasConstraintName("FK_Company_RecordStatuses");
                });

            modelBuilder.Entity("ProjectC.Data.Models.Customer", b =>
                {
                    b.HasOne("ProjectC.Data.Models.User", "CreatedByNavigation")
                        .WithMany("CustomerCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Customer_Users");

                    b.HasOne("ProjectC.Data.Models.User", "DeletedByNavigation")
                        .WithMany("CustomerDeletedByNavigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("FK_Customer_Users2");

                    b.HasOne("ProjectC.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("CustomerModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Customer_Users1");

                    b.HasOne("ProjectC.Data.Models.RecordStatus", "RecordStatus")
                        .WithMany("Customer")
                        .HasForeignKey("RecordStatusId")
                        .HasConstraintName("FK_Customer_RecordStatuses");
                });

            modelBuilder.Entity("ProjectC.Data.Models.Invoice", b =>
                {
                    b.HasOne("ProjectC.Data.Models.WorkOrderMaster", "WorkOrderMaster")
                        .WithMany("Invoice")
                        .HasForeignKey("WorkOrderMasterId")
                        .HasConstraintName("FK_Invoices_WorkOrderMasters")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectC.Data.Models.InvoiceDetail", b =>
                {
                    b.HasOne("ProjectC.Data.Models.Invoice", "Invoice")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK_InvoiceDetails_Invoices")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectC.Data.Models.Product", b =>
                {
                    b.HasOne("ProjectC.Data.Models.User", "CreatedByNavigation")
                        .WithMany("ProductCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Product_Users");

                    b.HasOne("ProjectC.Data.Models.Customer", "Customer")
                        .WithMany("Product")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Product_Customer");

                    b.HasOne("ProjectC.Data.Models.User", "DeletedByNavigation")
                        .WithMany("ProductDeletedByNavigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("FK_Product_Users2");

                    b.HasOne("ProjectC.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("ProductModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Product_Users1");

                    b.HasOne("ProjectC.Data.Models.RecordStatus", "RecordStatus")
                        .WithMany("Product")
                        .HasForeignKey("RecordStatusId")
                        .HasConstraintName("FK_Product_RecordStatuses");
                });

            modelBuilder.Entity("ProjectC.Data.Models.User", b =>
                {
                    b.HasOne("ProjectC.Data.Models.User", "CreatedByNavigation")
                        .WithMany("InverseCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Users_Users");

                    b.HasOne("ProjectC.Data.Models.User", "DeletedByNavigation")
                        .WithMany("InverseDeletedByNavigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("FK_Users_Users2");

                    b.HasOne("ProjectC.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("InverseModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Users_Users1");

                    b.HasOne("ProjectC.Data.Models.RecordStatus", "RecordStatus")
                        .WithMany("User")
                        .HasForeignKey("RecordStatusId")
                        .HasConstraintName("FK_User_RecordStatus")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectC.Data.Models.WorkOrderMaster", b =>
                {
                    b.HasOne("ProjectC.Data.Models.User", "CreatedByNavigation")
                        .WithMany("WorkOrderMasterCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_WorkOrderMaster_Users");

                    b.HasOne("ProjectC.Data.Models.Customer", "Customer")
                        .WithMany("WorkOrderMaster")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_WorkOrderMaster_Customer");

                    b.HasOne("ProjectC.Data.Models.User", "DeletedByNavigation")
                        .WithMany("WorkOrderMasterDeletedByNavigation")
                        .HasForeignKey("DeletedBy")
                        .HasConstraintName("FK_WorkOrderMaster_Users2");

                    b.HasOne("ProjectC.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("WorkOrderMasterModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_WorkOrderMaster_Users1");

                    b.HasOne("ProjectC.Data.Models.RecordStatus", "RecordStatus")
                        .WithMany("WorkOrderMaster")
                        .HasForeignKey("RecordStatusId")
                        .HasConstraintName("FK_WorkOrderMaster_RecordStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
